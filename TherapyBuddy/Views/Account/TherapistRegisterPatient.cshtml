@model TherapyBuddy.Models.TherapistRegisterPatientViewModel
@{
    ViewBag.Title = "Register";
}

<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("TherapistRegisterPatient", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Register a patient.</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
<div class="text-danger">@ViewBag.ErrorMessage</div>
    <div class="form-group">
            @Html.LabelFor(m => m.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
           @Html.EditorFor(m => m.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Name, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })       
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Feedback_Allowed, "Continue Interaction", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(m => m.Feedback_Allowed)
                @Html.ValidationMessageFor(model => model.Feedback_Allowed, "", new { @class = "text-danger" })
            </div>
        </div>
     </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Register" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
