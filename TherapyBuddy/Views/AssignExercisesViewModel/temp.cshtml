@model TherapyBuddy.Models.AssignExercisesViewModel
@{
    ViewBag.Title = "Register";
}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Assignment @ViewBag.PatientName</h4>
        <hr />
        @{
 string message = TempData["Message"] as string;
 if (!String.IsNullOrEmpty(message))
 {
 <div class="message">
 <center><p class="text-danger">@message</p></center>
 </div>
 }
 }
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ExerciseRegionID, "Exercise Region", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ExerciseRegionID, new  SelectList(ViewBag.ExerciseRegion, "ExerciseRegionID", "Name"), "Select an Exercise Region",htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ExerciseRegionID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ExerciseTypeID, "Exercise Type", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ExerciseTypeID, new  SelectList(ViewBag.ExerciseType, "ExerciseTypeID", "Name"), "Select an Exercise Type",htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ExerciseRegionID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ExerciseID, "Exercise", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ExerciseID, new  SelectList(ViewBag.Exercises, "ExerciseID", "Name"), "Select an Exercise",htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ExerciseID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
        <iframe width="560" height="315" src="https://www.youtube.com/embed/JO6sNPhn634" frameborder="0" allowfullscreen></iframe>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Number_Of_Reps, "Number Of Reps", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Number_Of_Reps, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Number_Of_Reps, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Frequency_Per_Day,"Frequency Per Day", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Frequency_Per_Day, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Frequency_Per_Day, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Prescribe" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
